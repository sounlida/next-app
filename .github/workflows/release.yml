name: Release

on:
  push:
    branches:
      - main

env:
  TURBO_REMOTE_ONLY: 'true'
  TURBO_TEAM: 'vercel'
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Fetch git tags
        run: git fetch origin 'refs/tags/*:refs/tags/*'

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: install npm@9
        run: npm i -g npm@9

      - name: install pnpm@8.3.1
        run: npm i -g pnpm@8.3.1

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Packages
        run: pnpm build
        env:
          GA_TRACKING_ID: ${{ secrets.GA_TRACKING_ID }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm ci:version
          publish: pnpm ci:publish
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_PULL_REQUESTS }}
          NPM_CONFIG_PROVENANCE: 'true'
          NPM_TOKEN: ${{ secrets.NPM_TOKEN_ELEVATED }}
          GA_TRACKING_ID: ${{ secrets.GA_TRACKING_ID }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}

      - name: Trigger Update (if a Publish Happened)
        if: steps.changesets.outputs.published == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GH_TOKEN_PULL_REQUESTS }}
          script: |
            const script = require('./utils/trigger-update-workflow.js')
            await script({ github, context })

      - name: Set latest Release to `vercel` (if a Publish Happened)
        if: steps.changesets.outputs.published == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GH_TOKEN_PULL_REQUESTS }}
          script: |
            const script = require('./utils/update-latest-release.js')
            await script({ github, context })
  summary:
    name: Summary
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs:
      - release
    steps:
      - name: Check All
        run: echo OK
